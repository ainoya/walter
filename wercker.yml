box: ainoya/golang-goxc@0.2.0
build:
    steps:
        - script:
            name: run test.sh
            code: |-
                sh ./test.sh
        - script:
            name: build binary
            code: |
                . ./build
                goxc -tasks='xc archive' -n walter -bc='linux,!arm windows darwin' -main-dirs-exclude='gopath,Godeps,tests' -d ${WERCKER_OUTPUT_DIR} -build-ldflags "-X ${REPO_PATH}/version.Version \"$(git describe --tags --always --dirty)\""
deploy:
  steps:
    # reference: https://github.com/motemen/ghq/blob/beee539aead9c3940a0c4706357c5753999f6c85/wercker.yml
    - script:
        name: fetch release tag
        code: |
            export RELEASE_TAG=$(curl https://api.github.com/repos/ainoya/walter/tags | jq -r ".[] | select(.commit.sha == \"${WERCKER_GIT_COMMIT}\") | .name")
    - wercker/github-create-release:
        token: $GITHUB_TOKEN
        tag: $RELEASE_TAG
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: snapshot/walter_linux_386.tar.gz
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: snapshot/walter_linux_amd64.tar.gz
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: snapshot/walter_darwin_386.zip
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: snapshot/walter_darwin_amd64.zip
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: snapshot/walter_windows_386.zip
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: snapshot/walter_windows_amd64.zip
